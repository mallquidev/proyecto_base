# Nombre lógico de la aplicación (puede usarse en logs o Actuator)
spring.application.name=ms-core

# Puerto donde se levanta el servidor
server.port=4001

# No usado en monolito. Parece clave personalizada.
# key.connection=HAIAHSOAKWIOQ

# Esto es para MSVC con cache distribuido. Requiere spring-boot-starter-cache y caffeine.
# spring.cache.type=caffeine

# Configuración de la base de datos (usás JPA + MySQL)
spring.datasource.url=${TEST_DB_URL}
spring.datasource.username=${TEST_DB_USERNAME}
spring.datasource.password=${TEST_DB_PASSWORD}

# Semilla de datos. Solo si tenés lógica personalizada para poblar la BD.
# app.seed.enabled=false

# Configuración de correo. Requiere JavaMailSender o spring-boot-starter-mail.
# google.email.username=${EMAIL_GOOGLE}
# google.email.password=${EMAIL_PASSWORD}

# Esto es para MSVC con documentación Swagger. Requiere springdoc-openapi-ui.
# springdoc.swagger-ui.enabled=true
# springdoc.swagger-ui.path=/swagger-ui.html

# Configuración de JPA/Hibernate
spring.jpa.hibernate.ddl-auto=none
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.dialect=${TEST_HIBERNATE_DIALECT}

logging.level.org.hibernate.type.descriptor.sql=TRACE
logging.level.org.hibernate.SQL=DEBUG

# Pool de conexiones Hikari (usado por defecto en Spring Boot)
spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.idle-timeout=30000
spring.datasource.hikari.max-lifetime=1800000

# Buena práctica para evitar lazy loading en controladores
spring.jpa.open-in-view=false

# Seguridad básica (usás spring-boot-starter-security)
spring.security.user.name=${USERNAME_ADMIN}
spring.security.user.password=${PASSWORD_ADMIN}

# Consola H2. Solo si usás H2 como BD en dev. No aplica si estás con MySQL.
# spring.h2.console.enabled=true
# spring.h2.console.path=/h2-console

# Logging útil para desarrollo
logging.level.com.gabo.ad.core=TRACE
logging.level.org.springframework.web=DEBUG
logging.level.org.springframework.security=DEBUG

# Logging avanzado. Solo si estás debuggeando filtros o autenticación personalizada.
# logging.level.org.springframework.web.filter=DEBUG
# logging.level.org.springframework.security.authentication=DEBUG
# logging.level.org.springframework.security.web.authentication=DEBUG
# logging.level.org.springframework.security.access=DEBUG

# Esto es para MSVC con autenticación JWT. Requiere jjwt o spring-security-jwt.
# security.authentication-type=${SECURITY_AUTHENTICATION_TYPE}
secret.token=${SECRET_TOKEN}
jwt.expiration.s=21600
jwt.refresh.expiration.s=604800
